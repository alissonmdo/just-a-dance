{"version":3,"sources":["SVG/just-a-dance-logo.svg","Card.js","Carousel.js","Songs.js","Player.js","Modal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","c","card","styled","div","props","thumb","details","title","p","artists","artist","length","i","className","onClick","handleClick","this","name","listArtists","React","Component","Carousel","carousel","songs","renderSingleCard","forEach","data","index","Songs","songsList","Object","entries","songsJson","key","value","values","vKey","vValue","parseSongs","MyYoutube","Youtube","Player","event","target","pauseVideo","videoId","opts","playerVars","autoplay","controls","allowfullscreen","style","display","Modal","showHideClassName","LogoA","img","MyApp","App","component","logo","state","selectedVideo","video","setState","src","Logo","alt","handleVideoSelect","role","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c230ecbf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/just-a-dance-logo.f15bd300.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\nexport default class Card extends React.Component {\n  listArtists(artists) {\n    if (!artists) return\n    var artist = artists[0]\n    if (artists.length > 1)\n      for (let i = 1; i < artists.length; i++) {\n        artist = artists + ', ' + artists[i]\n      }\n    return artist\n  }\n\n  render() {\n    return (\n      <this.c.card className=\"card\" onClick={() => this.props.handleClick()}>\n        <this.c.details className=\"card-details\">\n          <this.c.title className=\"card-title\">{this.props.name}</this.c.title>\n          <p className=\"card-artist\">{this.listArtists(this.props.artists)}</p>\n        </this.c.details>\n      </this.c.card>\n    )\n  }\n\n  c = {\n    card: styled.div`\n      width: 300px;\n      height: 300px;\n      border: 5px solid white;\n      overflow: hidden;\n      position: relative;\n      transition: all, ease, 0.3s;\n      background-image: url(${this.props.thumb});\n      background-position: top;\n      background-repeat: no-repeat;\n      background-size: cover;\n      &:hover {\n        box-shadow: 0 0 30px 0 white;\n        width: 350px;\n        height: 350px;\n        z-index: +1;\n        > .card-details {\n          top: 275px;\n        }\n      }\n      &:active {\n        z-index: -1;\n      }\n    `,\n    details: styled.div`\n      transition: all, ease, 0.3s;\n\n      background: white;\n      height: 75px;\n      top: 225px;\n      position: relative;\n      font-weight: bold;\n      padding: 5px;\n    `,\n    title: styled.p`\n      text-transform: uppercase;\n      font-size: 1.2em;\n      padding-bottom: 5px;\n    `,\n  }\n}\n","import React from 'react'\nimport Card from './Card'\nimport styled from 'styled-components'\n\nexport default class Carousel extends React.Component {\n  renderSingleCard(i) {\n    return (\n      <Card\n        name={this.props.songs[i]['name']}\n        artists={this.props.songs[i]['artists']}\n        thumb={this.props.songs[i]['thumb']}\n        handleClick={() => this.props.handleClick(this.props.songs[i]['video'])}\n      />\n    )\n  }\n\n  render() {\n    return (\n      <this.div.carousel className={'carousel full'}>\n        {this.renderSingleCard(0)}\n        {this.renderSingleCard(1)}\n        {this.renderSingleCard(2)}\n        {this.renderSingleCard(3)}\n        {this.renderSingleCard(4)}\n        {this.renderSingleCard(5)}\n        {this.renderSingleCard(6)}\n        {this.props.songs.forEach((data, index) => {\n          this.renderSingleCard(index)\n        })}\n      </this.div.carousel>\n    )\n  }\n  div = {\n    carousel: styled.div`\n      display: grid;\n      grid-gap: 10px;\n      grid-template-columns: 10px;\n      grid-auto-flow: column;\n      grid-auto-columns: 300px;\n      grid-auto-rows: 400px;\n      justify-items: center;\n      align-items: center;\n      height: 400px;\n      overflow-x: scroll;\n      scroll-snap-type: x proximity;\n      padding-bottom: calc(0.75 * 20px);\n      margin-bottom: calc(-0.25 * 20px);\n      &::before {\n        content: '';\n        width: 10px;\n      }\n      &::after {\n        content: '';\n        width: 10px;\n      }\n    `,\n  }\n}\n","import songsJson from \"./songs.json\"\n\n\nfunction parseSongs(){\n  const songsList = [];\n  for (var [key, value] of Object.entries(songsJson)){\n    const values = [];\n    for (var [vKey, vValue] of Object.entries(value)){\n      values[vKey] = vValue;\n    }\n    songsList[key] = values;\n  }\n  return songsList;\n}\nconst Songs = parseSongs();\n\nexport default Songs;","import React from 'react'\nimport Youtube from 'react-youtube'\nimport styled from 'styled-components'\n\nconst MyYoutube = styled(Youtube)`\n  position: fixed;\n  width: 90%;\n  height: 90%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  overflow: hidden;\n  border-radius: 20px;\n  box-shadow: 0px 0px 30px black;\n`\nexport default class Player extends React.Component {\n  _onReady(event) {\n    // access to player in all event handlers via event.target\n    event.target.pauseVideo()\n  }\n  render() {\n    const opts = {\n      playerVars: {\n        autoplay: 1,\n        controls: 0,\n      },\n    }\n    return (\n      <MyYoutube\n        className=\"player\"\n        videoId={this.props.videoId}\n        opts={opts}\n        allowfullscreen\n        style={{\n          display: 'none',\n        }}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport Player from './Player'\n\nexport default class Modal extends React.Component {\n  showHideClassName() {\n    return this.props.videoId ? 'modal display-block' : 'modal display-none'\n  }\n  render() {\n    return (\n      <div className={this.showHideClassName()}>\n        <div className=\"player-controls\">\n          <button>Música Anterior</button>\n          <button onClick={() => this.props.handleClick(null)}>\n            Voltar ao menu\n          </button>\n          <button>Nova Música</button>\n        </div>\n        <Player videoId={this.props.videoId} />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Carousel from './Carousel'\nimport Songs from './Songs'\nimport Modal from './Modal'\nimport Logo from './SVG/just-a-dance-logo.svg'\nimport styled from 'styled-components'\n\nconst LogoA = styled.img`\n  height: 18vh;\n  justify-self: center;\n  margin: 5vh;\n  transition: 'all, linear, .5s';\n  &:hover {\n    height: 20vh;\n  }\n`\nconst MyApp = styled.div`\n  .app-container {\n    display: grid;\n    grid-template-columns: 20px 1fr 20px;\n  }\n  .app-container > * {\n    grid-column: 2/-2;\n  }\n  .app-container > .full {\n    grid-column: 1/-1;\n  }\n  .app-container .app-title {\n    display: none;\n  }\n\n  .app-dev {\n    justify-self: center;\n    vertical-align: bottom;\n    align-self: flex-end;\n  }\n`\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedVideo: null,\n    }\n  }\n\n  handleVideoSelect(video) {\n    this.setState({ selectedVideo: video })\n  }\n\n  render() {\n    return (\n      <MyApp className=\"app\">\n        <div className=\"app-container\">\n          <h1 className=\"app-title\">Just a Dance</h1>\n          <LogoA\n            className=\"app-logo\"\n            src={Logo}\n            alt=\"Just A Dance Logo\"\n            // style={logoStyles}\n          />\n          <Carousel\n            songs={Songs}\n            handleClick={i => this.handleVideoSelect(i)}\n          />\n          <p className=\"app-dev\">\n            Made with <span role=\"img\">❤</span> in <span role=\"img\">🇧🇷</span> by\n            Alisson.dev\n          </p>\n        </div>\n        <Modal\n          videoId={this.state.selectedVideo}\n          handleClick={i => this.handleVideoSelect(i)}\n        />\n      </MyApp>\n    )\n  }\n\n  component = {\n    logo: styled.img`\n      height: 18vh;\n      justify-self: center;\n      margin: 5vh;\n\n      &:hover {\n        height: 20vh;\n      }\n    `,\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}